unit TestFizzBuzzTSU;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
    TestFramework,
    FizzBuzzTSU;

type
  // Test methods for class IFizzbuzzTransactionScript

    TestFizzbuzzTS = class(TTestCase)
    strict private
        FFizzbuzzTS: IFizzbuzzTransactionScript;
    public
        procedure SetUp; override;
        procedure TearDown; override;
    published
        procedure TestFizzbuzz;
        procedure TestFavouritesTrue;
        procedure TestFavouritesFalse;
    end;

implementation

procedure TestFizzbuzzTS.SetUp;
begin
  // TODO: Initialize FIFizzbuzzCLI
    FFizzbuzzTS := CreateFizzbuzzTS;

end;

procedure TestFizzbuzzTS.TearDown;
begin
    FFizzbuzzTS := nil;
end;

procedure TestFizzbuzzTS.TestFizzbuzz;
var
    ReturnValue: string;
    aSize:       Integer;
    aPage:       Integer;

const
    ExpectedResult =
        '{"items":[[1,1,false],[2,2,false],[3,"Fizz",false],[4,4,false],[5,"Buzz",false],[6,"Fizz",false],[7,7,false],[8,8,false],[9,"Fizz",false],[10,"Buzz",false],[11,11,false],[12,"Fizz",false],[13,13,false],'
        + '[14,14,false],[15,"FizzBuzz",false]],"page":1,"page_size":15,"total_pages":6666666667,"total_results":100000000000}';
begin
  // ARRANGE ACT
    ReturnValue := FFizzbuzzTS.Fizzbuzz(1, 15);
  // ASSERT
    CheckEquals(ExpectedResult, ReturnValue);
end;

procedure TestFizzbuzzTS.TestFavouritesFalse;
var
    ReturnValue: string;
const
    ExpectedResult = '{"result":[1,false]}';

begin
    // ARRANGE ACT
    ReturnValue := FFizzbuzzTS.Favourites(1, False);
     // ASSERT
    CheckEquals(ExpectedResult, ReturnValue);
end;

procedure TestFizzbuzzTS.TestFavouritesTrue;
var
    ReturnValue: string;

const
    ExpectedResult = '{"result":[1,true]}';

begin
    // ARRANGE ACT
    ReturnValue := FFizzbuzzTS.Favourites(1, True);
 // ASSERT
    CheckEquals(ExpectedResult, ReturnValue);
end;

initialization

// Register any test cases with the test runner
RegisterTest(TestFizzbuzzTS.Suite);

end.
